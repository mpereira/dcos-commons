{
  "type": "object",
  "properties": {
    "service": {
      "type": "object",
      "description": "",
      "properties": {
        "name": {
          "description": "DC/OS service and Elasticsearch cluster name",
          "type": "string",
          "default": "elastic"
        },
        "service_account_secret": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "user": {
          "description": "The user that runs the Elasticsearch services and owns the Mesos sandbox.",
          "type": "string",
          "default": "nobody"
        },
        "service_account": {
          "description": "The service account for DC/OS service authentication. This is typically left empty to use the default unless service authentication is needed. The value given here is passed as the principal of Mesos framework.",
          "type": "string",
          "default": ""
        },
        "virtual_network_enabled": {
          "description": "Enable virtual networking",
          "type": "boolean",
          "default": false
        },
        "virtual_network_name": {
          "description": "The name of the virtual network to join",
          "type": "string",
          "default": "dcos"
        },
        "virtual_network_plugin_labels": {
          "description": "Labels to pass to the virtual network plugin. Comma-separated key:value pairs. For example: k_0:v_0,k_1:v_1,...,k_n:v_n",
          "type": "string",
          "default": ""
        },
        "deploy_strategy": {
          "description": "Elasticsearch deploy strategy. [parallel, serial]",
          "type": "string",
          "default": "parallel",
          "enum" : ["parallel", "serial"]
        },
        "update_strategy": {
          "description": "Elasticsearch update strategy. [parallel, serial]",
          "type": "string",
          "default": "serial",
          "enum" : ["parallel", "serial"]
        },
        "mesos_api_version": {
          "description": "Configures the Mesos API version to use. Possible values: V0 (non-HTTP), V1 (HTTP)",
          "type": "string",
          "default": "V0"
        },
        "tls": {
          "description": "Enable TLS support (requires Enterprise DC/OS running in strict or permissive security mode).",
          "type": "boolean",
          "default": false
        },
        "log_level": {
          "description": "The log level for the DC/OS service.",
          "type": "string",
          "enum": ["OFF", "FATAL", "ERROR", "WARN", "INFO", "DEBUG", "TRACE", "ALL"],
          "default": "INFO"
        }
      },
      "required": [
        "name",
        "user",
        "deploy_strategy",
        "update_strategy"
      ]
    },
    "master_nodes": {
      "description": "Configuration properties for the three (3) Elasticsearch master nodes",
      "type": "object",
      "properties": {
        "cpus": {
          "description": "Node cpu requirements",
          "type": "number",
          "default": 1.0
        },
        "mem": {
          "description": "Node mem requirements",
          "type": "integer",
          "default": 2048
        },
        "heap": {
          "description": "The Elasticsearch process JVM heap configuration object",
          "type": "object",
          "properties": {
            "size": {
              "type": "integer",
              "description": "The amount of JVM heap, in MB, allocated to the Elasticsearch node process.",
              "default": 1024
            }
          },
          "additionalProperties": false,
          "required": [
            "size"
          ]
        },
        "disk": {
          "description": "Node disk requirements (only respected with persistent volumes)",
          "type": "integer",
          "default": 2000
        },
        "disk_type": {
          "type": "string",
          "description": "Disk type to be used for storing data. [ROOT, MOUNT]",
          "default": "ROOT"
        },
        "transport_port": {
          "description": "Transport port for master nodes to listen on.",
          "type": "integer",
          "default": 9300
        },
        "placement": {
          "description": "Marathon-style placement constraints (e.g., hostname:UNIQUE).",
          "type": "string",
          "default": ""
        }
      },
      "required": [
        "cpus",
        "mem",
        "disk",
        "transport_port"
      ]
    },
    "data_nodes": {
      "description": "Elasticsearch data node configuration properties",
      "type": "object",
      "properties": {
        "count": {
          "description": "Number of data nodes to run",
          "type": "integer",
          "default": 2,
          "minimum": 1
        },
        "cpus": {
          "description": "Node cpu requirements",
          "type": "number",
          "default": 1.0
        },
        "mem": {
          "description": "Node mem requirements",
          "type": "integer",
          "default": 4096
        },
        "heap": {
          "description": "The Elasticsearch process JVM heap configuration object",
          "type": "object",
          "properties": {
            "size": {
              "type": "integer",
              "description": "The amount of JVM heap, in MB, allocated to the Elasticsearch node process.",
              "default": 2048
            }
          },
          "additionalProperties": false,
          "required": [
            "size"
          ]
        },
        "disk": {
          "description": "Node disk requirements (only respected with persistent volumes)",
          "type": "integer",
          "default": 10000
        },
        "disk_type": {
          "type": "string",
          "description": "Disk type to be used for storing data. [ROOT, MOUNT]",
          "default": "ROOT"
        },
        "placement": {
          "description": "Marathon-style placement constraints (e.g., hostname:UNIQUE).",
          "type": "string",
          "default": ""
        }
      },
      "required": [
        "cpus",
        "mem",
        "disk",
        "count"
      ]
    },
    "elasticsearch": {
      "description": "Elasticsearch service configuration properties",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "xpack_enabled": {
          "description": "Whether or not to enable the commercial X-Pack plugin from Elastic",
          "type": "boolean",
          "default": false
        },
        "plugins": {
          "description": "Comma-separated list of plugins to install",
          "type": "string",
          "default": ""
        },
        "custom_elasticsearch_yml": {
          "description": "Custom YAML to be appended to elasticsearch.yml on each node. This field must be base64 encoded.",
          "type": "string",
          "media": {
            "binaryEncoding": "base64",
            "type": "application/x-yaml"
          },
          "default": ""
        },
        "health_user": {
          "description": "Elastic username to use for X-Pack authentication, if enabled",
          "type": "string",
          "default": "elastic"
        },
        "health_user_password": {
          "description": "Password to use with health_user for X-Pack authentication, if enabled. Note that you are not setting the password here. You are telling the framework the credentials to use when sending in health check requests.",
          "type": "string",
          "default": "changeme"
        },
        "gateway_recover_after_time": {
          "description": "If the expected number of nodes is not achieved, the recovery process waits for the configured amount of time before trying to recover regardless. Defaults to 5m if one of the expected_nodes settings is configured.",
          "type": "string",
          "default": "5m"
        },
        "script_allowed_types": {
          "description": "By default all script types (inline,file,stored) are allowed to be executed. This can be modified using the setting script_allowed_types. Only the types specified as part of the setting will be allowed to be executed. To specify no types are allowed, set script.allowed_types to be none. Empty string \"\" means all types (default).",
          "type": "string",
          "default": ""
        },
        "script_allowed_contexts": {
          "description": "By default all script contexts (search,update,aggs,plugin) are allowed to be executed. This can be modified using the setting script_allowed_contexts. Only the contexts specified as part of the setting will be allowed to be executed. To specify no contexts are allowed, set script_allowed_contexts to be none. Empty string \"\" means all contexts (default).",
          "type": "string",
          "default": ""
        },
        "repositories_url_allowed_urls": {
          "description": "URL Repository supports the following protocols: \"http\", \"https\", \"ftp\", \"file\" and \"jar\". URL repositories with http:, https:, and ftp: URLs have to be whitelisted by specifying allowed URLs in the repositories_url_allowed_urls setting. This setting supports wildcards in the place of host, path, query, and fragment.",
          "type": "string",
          "default": ""
        },
        "network_tcp_no_delay": {
          "description": "Enable or disable the TCP no delay setting. Defaults to true.",
          "type": "boolean",
          "default": true
        },
        "network_tcp_keep_alive": {
          "description": "Enable or disable TCP keep alive. Defaults to true.",
          "type": "boolean",
          "default": true
        },
        "network_tcp_reuse_address": {
          "description": "Should an address be reused or not. Defaults to true.",
          "type": "boolean",
          "default": true
        },
        "network_tcp_send_buffer_size": {
          "description": "The size of the TCP send buffer (specified with size units). By default not explicitly set.",
          "type": "string",
          "default": ""
        },
        "network_tcp_receive_buffer_size": {
          "description": "The size of the TCP receive buffer (specified with size units). By default not explicitly set.",
          "type": "string",
          "default": ""
        },
        "transport_tcp_connect_timeout": {
          "description": "The socket connect timeout setting (in time setting format). Defaults to 30s.",
          "type": "string",
          "default": "30s"
        },
        "transport_tcp_compress": {
          "description": "Set to true to enable compression (LZF) between all nodes. Defaults to false.",
          "type": "boolean",
          "default": false
        },
        "transport_ping_schedule": {
          "description": "Schedule a regular ping message to ensure that connections are kept alive. Defaults to 5s in the transport client and -1 (disabled) elsewhere.",
          "type": "string",
          "default": "-1"
        },
        "http_enabled": {
          "description": "The http module can be completely disabled and not started by setting http.enabled to false. Default is true.",
          "type": "boolean",
          "default": true
        },
        "http_max_content_length": {
          "description": "The max content of an HTTP request. Defaults to 100mb. If set to greater than Integer.MAX_VALUE, it will be reset to 100mb.",
          "type": "string",
          "default": "100mb"
        },
        "http_max_initial_line_length": {
          "description": "The max length of an HTTP URL. Defaults to 4kb.",
          "type": "string",
          "default": "4kb"
        },
        "http_max_header_size": {
          "description": "The max size of allowed headers. Defaults to 8kB.",
          "type": "string",
          "default": "8kB"
        },
        "http_compression": {
          "description": "Support for compression when possible (with Accept-Encoding). Defaults to true.",
          "type": "boolean",
          "default": true
        },
        "http_compression_level": {
          "description": "Defines the compression level to use for HTTP responses. Valid values are in the range of 1 (minimum compression) and 9 (maximum compression). Defaults to 3.",
          "type": "integer",
          "default": 3
        },
        "http_cors_enabled": {
          "description": "",
          "type": "boolean",
          "default": false
        },
        "http_cors_allow_origin": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "http_cors_max_age": {
          "description": "",
          "type": "integer",
          "default": 1728000
        },
        "http_cors_allow_credentials": {
          "description": "",
          "type": "boolean",
          "default": false
        },
        "http_cors_allow_headers": {
          "description": "",
          "type": "string",
          "default": "X-Requested-With,Content-Type,Content-Length"
        },
        "http_cors_allow_methods": {
          "description": "",
          "type": "string",
          "default": "OPTIONS,HEAD,GET,POST,PUT,DELETE"
        },
        "http_detailed_errors_enabled": {
          "description": "",
          "type": "boolean",
          "default": true
        },
        "http_pipelining": {
          "description": "",
          "type": "boolean",
          "default": true
        },
        "http_pipelining_max_events": {
          "description": "",
          "type": "integer",
          "default":  10000
        },
        "http_content_type_required": {
          "description": "",
          "type": "boolean",
          "default": false
        },
        "thread_pool_search_size": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "thread_pool_search_queue_size": {
          "description": "",
          "type": "integer",
          "default": 1000
        },
        "thread_pool_index_size": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "thread_pool_index_queue_size": {
          "description": "",
          "type": "integer",
          "default": 200
        },
        "thread_pool_get_size": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "thread_pool_get_queue_size": {
          "description": "",
          "type": "integer",
          "default": 200
        },
        "thread_pool_bulk_size": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "thread_pool_bulk_queue_size": {
          "description": "",
          "type": "integer",
          "default": 200
        },
        "thread_pool_listener_size": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "thread_pool_listener_queue_size": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "thread_pool_warmer_core": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "thread_pool_warmer_max": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "thread_pool_warmer_keep_alive": {
          "description": "",
          "type": "string",
          "default": "5m"
        },
        "thread_pool_snapshot_core": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "thread_pool_snapshot_max": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "thread_pool_snapshot_keep_alive": {
          "description": "",
          "type": "string",
          "default": "5m"
        },
        "thread_pool_refresh_core": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "thread_pool_refresh_max": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "thread_pool_refresh_keep_alive": {
          "description": "",
          "type": "string",
          "default": "5m"
        },
        "thread_pool_generic_core": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "thread_pool_generic_max": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "thread_pool_generic_keep_alive": {
          "description": "",
          "type": "string",
          "default": "30s"
        },
        "indices_breaker_total_limit": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "indices_breaker_fielddata_limit": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "indices_breaker_fielddata_overhead": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "network_breaker_inflight_requests_limit": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "network_breaker_inflight_requests_overhead": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "script_max_compilations_per_minute": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "indices_fielddata_cache_size": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "indices_queries_cache_size": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "indices_memory_index_buffer_size": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "indices_memory_min_index_buffer_size": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "indices_memory_max_index_buffer_size": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "indices_recovery_max_bytes_per_sec": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "search_remote_connections_per_cluster": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "search_remote_initial_connect_timeout": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "search_remote_node_attr": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "search_remote_connect": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "indices_query_bool_max_clause_count": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "discovery_zen_ping_unicast_hosts.resolve_timeout": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "discovery_zen_fd_ping_interval": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "discovery_zen_fd_ping_timeout": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "discovery_zen_fd_ping_retries": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "discovery_zen_no_master_block": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_blocks_read_only": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_blocks_read_only_allow_delete": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_indices_tombstones_size": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "index_routing_allocation_total_shards_per_node": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_total_shards_per_node": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_awareness_attributes": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_disk_threshold_enabled": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_disk_watermark_low": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_disk_watermark_high": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_info_update_interval": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_disk_include_relocations": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_enable": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_node_concurrent_incoming_recoveries": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_node_concurrent_outgoing_recoveries": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_node_concurrent_recoveries": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_node_initial_primaries_recoveries": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_same_shard_host": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_rebalance_enable": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_allow_rebalance": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_cluster_concurrent_rebalance": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_balance_shard": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_balance_index": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "cluster_routing_allocation_balance_threshold": {
          "description": "",
          "type": "string",
          "default": ""
        },
        "indices_requests_cache_size": {
          "description": "",
          "type": "string",
          "default": ""
        }
      }
    }
  }
}
